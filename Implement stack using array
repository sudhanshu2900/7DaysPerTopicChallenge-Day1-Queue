PROBLEM:  push(2)
          push(3)
          pop()
          push(4) 
          pop() 
          
Output: 3, 4

Explanation: 
            push(2)    the stack will be {2}
            push(3)    the stack will be {2 3}
            pop()      poped element will be 3, the stack will be {2}
            push(4)    the stack will be {2 4}
            pop()      poped element will be 4
            
            
 SOLUTION:
 
 
 void MyStack :: push(int x)
{
    arr[++top]=x;
}

int MyStack :: pop()
{
    if(top!=-1) return arr[top--];
    else return -1;
}





